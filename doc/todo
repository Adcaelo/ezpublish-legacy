
Things that need to be done

*SDK :
- Use eZ template library for all HTML output, that way it's easier to customize the
  SDK look.

-4 Separate the Kernel code documentation and the Kernel introduction information
-6 Add documentation which explains how eZ publish works on different platforms,
   Linux, Windows, Mac etc..

Documents :
-7 Create document which gives an introduction to the module system and how it relates
  to input URIs.
-5 Document how the module system works and how the URL's are decoded.
-5 Document how the a page is generated with main content and pageview.
-7 Document how objects change version and howto publish/unpublish.

*General :
-6 Move the override/design matcher which is used in the template function ezdesign
   to a general function which can be easily reused for other parts of the system.
-4 Allow sites to adjust their date/time incase the host date/time is wrong.
-6 Create logrotating for log files, they can grow extremely large at least in development.
   Each file should have a maximum file size, when it reaches that size it's
   moved to a new file with .1 appended if that file exists it is moved to .2 and if
   that file exists it is moved .3 etc.. The number of log rotate files should also
   be controlled by a site.ini setting.

*Kernel :


Micropayment
- Add micropayment engine

Personalization
- Add support for storing the user profile. E.g. if a uses looks at a Starwars DVD he
will get 1 point in SCI-FI. If he looks at a sports article he will get one point in 
sports. This profile information can then be used for showing related products for that
user.

General :

-7 Add plugin system for content object actions

-8 Add ticket system for secure forms (and doubleclick detection).

eZ persistentobject :
-9 Rethink the functions and their parameters, instead of using 7+ parameters we should
   use an associative array as parameter. The field structure in all classes should probably
   be rethought too, field names should have more information like type etc..


*Library :

eZ db :
- Detect how long time a query takes and add it to the sql debug output with the number of rows
  affected. Must be done separately in mysql, postgresl and oracle implementations. MySQL is done,
  PostgreSQL and Oracle is missing.

eZ xml :
-7 Test eZ xml against the W3C XML test suite.

eZ user :
-4 Make sure the root and anonymous user is created as real db users when the site is first
   initialized.

eZ i18n :
- Report non translated strings to screen, file and db.

eZ template :
- Add support for dereferencing returned data from operators,
  that way it's possible to do *$var|someoperator(param1,param2).attribute1*
- See if most of the parser code can be moved out to a separate class, that way it's possible
  to create multiple parser(to test speed improvements).
- Create wrapper function which can take existing operators and let them work as functions.
  The operator input text would then be the children of the function.
- Calculate line and column numbers when parsing and output those when errors are found.
  They could be stored in the structures for variables and the likes.

eZ image :
- Image variations should either be a scaled down version or a cropped version.
  Cropped versions would require user handling for each image. Note! Cropped images might be solved
  by having two images for an object, the first being the cropped one and the second the
  original, the rest is just template magic.
