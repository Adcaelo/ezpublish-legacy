*Title: Clustering.

*Incentive:

It is now hard to build clasters on eZ publish, since the problem of synchronizing
caches, images and binary files between cluster nodes.

*Basics:

The clustering feature makes eZ publish store images, binary files, and
all content-related caches to database.
Templates, compiled templates, override cache and other caches not
related to content are still stored on disc.

*Setup

 1. Switch to database storage.

Add this to your file.ini.append.php:
    [ClusteringSettings]
    FileHandler=ezdb
    DBBackend=mysql # or pgsql

This will force eZ publish to use database for storing images, binary files
and content-related caches.

 2. Specify db to connect to.

Go to kernel/classes/clusterfilehandlers/dbbackends/
and edit database settings in the begging of
file mysql.php or pgsql.php (depending on the backend chosen).

 3. Create table(s) in database.
 
See table creation queries in the same file you edited db settings in
and run them on the database.

 4. Copy your files stored in var dir into database.

$ bin/php/clusterize.php -s shop_site

where 'shop_site' is your siteaccess.

 5. Clear the cache, using the clearcache.sh script.

$ cd <ezp dir>
$ bin/shell/clearcache.sh --clear-all
$ bin/shell/clearcache.sh --clear-all --var-subdir=mdk

This is the last time you will use the clearcache.sh script. This is because
clearcache.sh script will not be able to clear any cache in the database. It
only works on cache stored on the filesystem. To clear the cache from now on,
use the clearcache functions in the admin interface, or the
bin/php/ezcache.php script.

 6. Compile the templates.

Since all caches now are empty, we should compile the templates again. You
might skip this step. If you skip this step, the templates will be compiled
on demand when browsing the site.

$ cd <ezp dir>
$ /usr/local/php/bin/php bin/php/eztc.php -s en

This step should be done for each siteaccess

 7. Update apache virtualhost configuration.

Since images are no longer stored on disk but in the database, they need to
 be served by php. Therefore you will need to apply two more RewriteRules.

Apply the following RewriteRules before your rules:
  Rewriterule ^/var/([^/]+/)?storage/images-versioned/.*  /index_image.php [L]
  Rewriterule ^/var/([^/]+/)?storage/images/.*            /index_image.php [L]

 8. Restart apache and this should work.

*Usage:

You can easily store your files into database and retrieve them back,
rename and delete them, etc using the cluster file handler API.

Before using a handler, you must instantiate it as following:

    require_once( 'kernel/classes/ezclusterfilehandler.php' );
    $fileHandler = eZClusterFileHandler::instance();

Example #1: Storing existing file to database

    $fileHandler->fileStore( 'var/storage/files/foo.txt' );

Example #2: Creating file in database and storing given data to it

    $fileHandler->fileStoreContents( 'var/storage/files/foo.txt', $data );

Example #3: Fetching file from database

    // copy file from database to filesystem
    $fileHandler->fileFetch( 'var/storage/files/foo.txt' );

Example #4: Retrieving file contents from database

    $data = $fileHandler->fileFetchContents( 'var/storage/files/foo.txt' );

Example #5: Deleting file from database

    $fileHandler->fileDelete( 'var/storage/files/foo.txt' );

For more information see kernel/classes/clusterfilehandlers/*.php.
