======================================
Extensions info & ordering refactoring
======================================

eZInfo
======

Current usage
-------------

* Implemented through <ExtensionName>Info
* Only used from ``eZExtension::extensionInfo( $extensionName )``

Metadata refactoring
--------------------
* Move eZXXXInfo::info() stuff to an XML file (extension.xml)
* Improve ezpExtension so that it can parse this file for metadata
* Integrate caching in between so that the XML file isn't parsed constantly
* eZXXXInfo::info() is replaced with ezpExtension::info(), and eZExtension::extensionInfo() must return the same structure

Ordering (dependencies) informations
====================================

Current (loading.php) implementation
------------------------------------

Implements two kind of ordering (not yet deps) infos:
* before: indicates that the current extension should have higher priority. Can be translated to 'extends', as it means
  that the target extension is extended by the configured one
* after: indicates that the current extension 'uses' the other one. It is not a mandatory dependency, but could be
  declared as such for future, more complete usage.

New (extension.xml) implementation
----------------------------------
This file will contain three types of ordering informations, formatted as dependencies instead. In the current sprint
(#2), we will keep the features implemented in sprint #1, using 'before' and 'after' flags. The file allows more
accurate definitions so that real dependency management can be implemented later on without affecting this file.

* *dependsOn*: indicates that this extension depends on the documented extension to run. Strong dependency.
  Interpreted as 'after' in the loading.php implementation
* *uses*: indicates that this extension uses features from the documented extension to run. Weak dependency.
  Interpreted as 'after' as well in the loading.php implementation
* *extends*: indicates that this extension overrides some features (usually design, also settings) from the documented
  one. Interpreted as 'before' in the loading.php implementation.
