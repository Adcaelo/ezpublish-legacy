eZ Publish: Admin Interface, Requirements, 4.3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

$Author$
$Revision$
$Date$
:Status: Draft


Preface
-------
Current admin design, both in its styling and in its UI has been increasingly
subject to criticism for being outdated, slow, impossible to extend cleanly,
unintuitive and a lack of a central place to get a overview of all the task a user
(both editor and admin) needs to look after.

Overall there is a need to update the admin interface to adhere more closely to how web
applications have evolved with the improved usability, simplified interfaces, ajaxified
features and clean designs that users are becoming used to in the web 2.0 era.

For the outdated, this comes down to over styled design compared to other admin interfaces.
Both in overwhelming the user with options to click, to much screen real-estate wasted on
styling and a outdated styling.

For slowness, this is first and foremost number of clicks and page refreshes you have
to go true to accomplish some key tasks. Identified key tasks are:
* Class attribute moving + adding + removing
* Adding policies to roles
* Finding relations on object relation and object relation list object attributes
* Browsing for nodes during actions like: move to, copy to, relations, assign role
   and add node / sub tree function limitations to policies

Extendability is defined as possibility for extensions to extend the admin interface
without having to override template files, as it then would be impossible for several
extensions to extend the same parts.

Making the interface more intuitive involves improving usability and removing / moving
/ hiding features that users does not need during the operation they are performing.
Identified tasks:
* Hide right menu by default
* Have seperate preferences for media tab / pr tab for admin_children_viewmode and
  admin_navigation_* (user preferences for the middle column in admin)

A overview of user task need a dashboard, where she can follow here own
content, approval and other tasks she might do on a regular basis.



Features (in prioritized order for 4.3)
--------------------------------------
New admin interface style.
Should: Look more modern and up to date
Should: Reclaim screen real estate for content area
Should: Not require any new kernel features or changes
Should: Continue being flexible width design
Should: Not make any changes to the layout / wire frame except
        for other features of this document
Could: Make admin style more accessible for modern mobile devices

New possibility to hide the right menu, and hide it by default.
Should: Not involve any page refresh to show / hide it.
Should: Move logout link to header so it is always accessible.
Could: Make the code for layout change general so it can be reused by
       size selector on left menu, as well as the hide / show buttons on
       right menu and left menu items.

Change how preferences for middle column is handled
Should: Make admin_children_viewmode pr tab (Navigation part)
Could: Make admin_navigation_* pr tab (Navigation part)

New dashboard as login page
Should: Be the default login page in admin interface
Should: Provide box for last published content
Should: Provide box for last modified content by current user
Should: Provide short links to user specific task like changing password
Should: Provide a box for content for approval
Should: Be extend able so extensions can add blocks
Could: Provide a box for highest/lowest rated content (ezstarrating)
Could: Provide a box for comment approval (ezjscomment)

New Ajax features for relation object and list content attributes.
Should: Add a inline Ajax search interface to find possible relations
Should: Be able to remove relations without page refresh
Could: Be able to reorder relations without page refresh (list)
Could: Provide drag and drop features to relations for reordering(list)

New Ajax features for adding policies to roles.
Should: Be able to select module and function without any page refresh

New Ajax functionality for class edit interface.
Should: Be able to add attribute without page refresh
Should: Be able to remove attribute without page refresh
Should: Be able to move attributes without page refresh
Could: Allow using drag and drop to move attributes

Add Ajax feature to re order sub items using drag and drop
Could: Merge drag and drop feature from ezwt extension

[Not planned] Rewrite context menu code, to remove old JavaScript code.
Should: Use context menu code from YUI 3.0 or jQuery UI
Should: Make it easier to extend the menu's from extensions

[Not planned] New Ajax interface for browsing node(s)
Could: Use when selection node / sub tree limitations on role policies
Could: Use when selecting target for move to operation
Could: Use when selecting target for copy to operation
Could: Use when selecting relation while browsing for new relations
Could: Use when assigning role with and without sub tree limitation

