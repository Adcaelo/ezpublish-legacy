CHANGELOG

Changes from 2.9-6 to 2.9-7

*Kernel :
- Fixed redirection to self when editing top level node
- The ModuleRepositories setting in ModuleSettings in settings/site.ini
  has been changed to an array.
- Moved some settings from site.ini into design.ini and workflow.ini
- Added the notion of extensions, there are some settings in site.ini
  which controls which extension are active. A new class eZExtension
  has been made for this purpose.
- Workflowtype list has been changed to an array in workflow.ini
- Added DesignExtensions array in design.ini, extensions will
  add to this list to insert additional design.
- Added RepositoryDirectories and ExtensionDirectories array to workflow.ini
  which controls the directories and extensions which have event types.
- Moved module settings to module.ini file.
- Added support for literal tag which can contain special html caracters without breaking the XML.
- Added support for extensions, they use the x18n operator instead of i18n which takes
  an extension name as the first parameter.
- Fixed problem with missing content action when object has multiple content object actions.
- Added clearing of content cache for view when sorting priority is updated.
- Template overrides now check the override dir for the file first without _keyword overrides
  before doing checks with _keywords.
- Moved AvailableDataTypes into content.ini
- Extension support for datatypes and content actions.
- Template object forwarding function now supports render modes, a render mode will
  change the directory it searches for templates to render- and the modename./
- Fixed redirection for object publishing and removal to go to correct node after it's done.
- Added function to return creator of version in node
- Added uri_alias attribute on node.
- Module list in policies now works with extensions.
- Added anchor tag as standard in XMLText
- Optimized fetch lists
- Access denied page now shows a login button if the current user is anonymous.
- Added reverse_related_object_list attribute to eZContentObjectVersion
- Added next/previous navigation on browse page
- Made ezurl operator convert empty strings to / url's.
- Improved validation for datetime datatype.
- Fixed reference bug in enum serialization
- Added new workflow event type publishontime it allows to create workflow which will delay publishing of objects.
- Added session cache handler class to manage cached session information
- Added session cache on current user
- Fixed crash with ' character in object name translation
- Added session cache for current user group assignments
- The admin left menu can have parts of it disabled by setting some variables when including it.
- Added nodetree searching to advancedsearch which is similar to the one in normal search.
- Fixed user registration to read some default values from site.ini, such as class id,
  section id and creator id. It also made sure the registration session variable was removed
  when cancelling.

contentclass:
- Moving attributes up in class edit now moves one step instead of two.
- Classes can now be copied, a new function in eZDataType was added which
  tells datatypes to copy data from the old to the new. This is only required
  for complexe datatypes which uses external tables for class options.
- After creating a new class group you are now redirected to that group.
- Sorting on object name was added (Patch by Bruce Morrison)
- Added unpublish workflow event.
- Added unpublish function to ezcontenobjectversion

persistentobject:
- Added support for between in conditions, it is passed as an array with two elements
  as the second condition item.
- New dirty data flag which is set when an attribute is changed with setAttribute.
- New function sync() which will store the data if the dirty flag is set.

content:
- Added fetch functions content, version and node to fetch the content object,
  content object version and content node.
- Changed the serialize function to use namespaces and also changed the xml structure.
- Now you can create objects from left menubar
- content/edit.tpl has been split into multiple templates to make it easier to reuse and
  override each part.
- New template resource called /standard/ which works similar to /design/ but will only
  check in the standard design directory.
- content/edit_placement.tpl now has support for limitation placement, the template
  must be overriden to achieve this.

eZ extension:
- Added some helper functions for extension include.

*SDK :

*Library :

eZTemplate:
- Added wash operator which handles conversion of text to e.g. xhtml compatible format
- Fixed parser problem with {literal} tags.
- Improved texttoimage to support multiple font directories.
- When debug output is on the template include name is prepended to the text.
- Sitebasics are now only used if available.
- Made sure variable attributes were fetched with references for array as well as objects.
- New type operators, is_array, is_boolean, is_integer, is_float, is_numeric, is_string,
                      is_object, is_class, is_null, is_set, is_unset, get_type and get_class.
- New control operators, cond and first_set.

eZINI:
- Added support for override directories which are not a subdir
  of settings.
- Sitebasics are now only used if available.
- The main settings/*.ini dir is now used only if it exists, this means
  that ini files can exists in extensions.

eZModuleFunctionInfo:
- Added support for extension definitions.

eZ db:
- Mysql db driver no longer fetches indexed array only associative arrays.

eZ debug:
- Added missing class variable for group loop in debug output.
- New helper class called eZDebugSetting which allows for conditional debug
  messages.

eZXML:
- Some minor fixes to the toString() function with regards to text output.
- Added prefix to attribute creation function in eZDOMDocument.
- Added helper function for creating an element and a text as child in eZDOMDocument.
- Added helper function for creating an element and a CDATA as child in eZDOMDocument.
- The createElementNode now takes an additional parameter called attributes which
  is an associative array with attributes, the key will be the name and the value
  the content. This is also available on some of the other functions.
- New function firstChild() which returns the first child of all the children
  or null if no children.
- Added support for cloning DOM nodes.
