Changes from 3.2-3 to 3.3.0-1


*Kernel:
- Added count function for tipafriend and content view.
- Added support for information collection on option datatype.
- Added RSS export support, according to the RSS 1.0 specification: http://web.resource.org/rss/1.0/spec
- Added RSS import support, for displaying content from other web pages
- Added count function for collected information. This can be used for showing the results of a poll.
- Rewrote parts of the information collection system, it is now possible to configure
  email handling, display handling, redirection and collection separately and according
  to information collection type.
- Added validation and fixup methods for the information collection system to eZDataType.
- Made sure the required field in class defintion is used on information collection submittion
  for attributes that are information collectors.
- Added separate handling of http input and custom actions in ezcontentobject.
- Added fetching object by identifier to content module. Requires attribute data_text to be unique
- Optimized datatype abstraction calls. Resulting in less memory usage and less database calls.
- Extended treemenu operator to support offset and unlimited number of levels. It will also give information about the current selected items.
- Improved the text on the removeobject page and added a choice for whether the object
  should be moved to trash or deleted. Move to trash is the default.
- Improved the text on the removeeditversion page.
- Added support for class filter in treemenu operator.
- Added a $cli initialisation where a function could be called on a non-object in eZScript::initialize()
- Fixed correct link in wordtoimage operator when running in nvh mode.
- Fixed correct link in wordtoimage operator when running in nvh mode.
- Changed default redirect url from current object node to it's parent node when publishing from preview page.
- Added new fetch function object_count_by_user_id which returns the number of objects from a class created by a user.
- Added fetch function best_sell_list in module shop which returns best sellers of product.
- Added fetch function related_purchase in module shop which returns related purchases for a product.

*DataType:

eZINISetting
- New datatype for editing ini settings.

eZAuthor:
- Modified so it does not add default author if you have removed it manually.

eZObjectRelation
- Checks option in content.ini so you can specify per class attibute where to start browsing.

eZImage
- Redone the image datatype to use the new image system.

*Setup:
- Fixed bug of unable to show checkboxes if available packages less than 4.

*Package system:

*Bugs:
- http://ez.no/developer/ez_publish_3/bug_reports/logical_operators_do_not_work
  The parser has been fixed to properly recognize numbers when operators are present.

*Templates:
- created templates to override standard browse page when browsing in media folder.
- Added missing link target in embed_image.tpl
- Added templates for generating PDF
- Added advanced dropdown menu under setup to hide the most advanced features.

*Library :
- Added basic PDF library. This will be extended in the following weeks.

eZ template:
- Added support for using one variable to hold the iterator values instead of multiple variables.
  This helps with avoiding overuse of namespaces. The new parameter is 'var'.
- Added support for accessing the last iteration of a section loop, this only work with
  thew new variable iterator. Can be turned off with the 'no-last-value' parameter.
- Added support for reversing the loop in a section, the parameter is 'reverse'.
- Added fetch_alias function to simplify fetches ex: {let list=fetch_alias(news_list)}
  to fetch 10 last news articles. fetch_alias uses settings in settings/fetchalias.ini 
- Added templates for new design of setup in admin

eZ xml:
- Added the functions removeAttributes and removeChildren in eZDOMNode.
- Added outputhandler to handle PDF output
- Added escaping of attribute values.

eZ image:
- The image system has been rewritten to be more flexible, stable, faster and simpler to use.
  This means a new image manager system, a new image alias system (replacements for variations)
  and a better abstraction for image handlers (classes for converters).
- Added support for image analysis and MIME type overrides. This means that animated GIFs are now possible.
  Currently GIF and EXIF analysis is available, the information from the analysis is also available
  in the templates.

eZ utils:
- The store function in eZHTTPFile can now take a MIME data structure which is used
  for determining the storage place and name for the HTTP file.
- Redone most of the eZMimeType class to properly handle MIME types. It can query about
  MIME type based on url, contents or buffer. Currently only url is implemented fully.
  The system will be able to returned detailed information on the file in a MIME structure.
  The new MIME system is used in conjunction with the new image system.

eZ soap:
- Added support for arrays and boolean in ezsoapresponse return values

eZ file:
- Added support for hard links and added parameter to linkCopy to determine
  whether symlinks or hardlinks should be used. Also if the sym/hard link fails
  a normal copy is done.

*Translations:
- Several strings has been improved in terms of language use and
  to make them easier to translate.
