#?ini charset="iso-8859-1"?
# eZ publish configuration file for content browsing.
#
# NOTE: It is not recommended to edit this files directly, instead
#       a file in override should be created for setting the
#       values that is required for your site. Either create
#       a file called settings/override/upload.ini.append or
#       settings/override/upload.ini.append.php for more security
#       in non-virtualhost modes (the .php file may already be present
#       and can be used for this purpose).

# Settings for the upload page.
# For start nodes and top level nodes it is possible to use text aliases
# You can use the following aliases:
#  content - Represents the content root node defined NodeSettings/RootNode in content.ini, usually 2
#  users   - Represents the users root node defined NodeSettings/UserRootNode in content.ini, usually 5
# Other aliases are also possible by defining them in AliasList below

[UploadSettings]
DefaultReturnType=NodeID

# A map of node aliases to node ids, here it's possible to define custom alias names
# It maps from the alias name to a node ID
AliasList[]

[LocationSettings]
# A list of class identifiers that should be included in the location dropdown
ClassList[]
ClassList[]=folder

# Which root node to fetch locations from
# Either use a node ID or a node path (e.g. media )
# - content - The content structure
# - users   - The user tree
# - media   - Media tree for images, files and media
RootNode=media

# The maximum number of levels to look for objects
# A depth of 1 means direct descendants
MaxDepth=3
# The maxium number of elements in the drop down
# Setting it too high might slow down the system and make the dropdown hard to use.
# A number between 10 to 30 is OK.
MaxItems=30

[CreateSettings]
# Maps from a mime-type or mime-group to a class identifier
MimeClassMap[]
MimeClassMap[image]=image

# The class for all files that are not recognized.
# The default is to use the file class
DefaultClass=file

#
# Consists of the class identifier name with _ClassSettings appended
# This example is the for 'image' identifier.
# [image_ClassSettings]
#
# The class attribute identifier which will get the file data
# FileAttribute=image
#
# The class attribute identifier which will get the name,
# the name is calculated using NamePattern
# NameAttribute=name
#
# A pattern that defines the name of the object, it is
# contains text and tags enclosed in < and >.
# Available tags are:
# - original_filename:        The filename of the uploaded file like it was on the locale machine
# - original_filename_base:   Like original_filename but has just the base of the name (i.e no suffix)
# - original_filename_suffix: Like original_filename but has just suffix
# - mime_type:                The detected MIME-Type of the file
# NamePattern=<original_filename_base>

[image_ClassSettings]
FileAttribute=image
NameAttribute=name
NamePattern=<original_filename_base>

[file_ClassSettings]
FileAttribute=file
NameAttribute=name
NamePattern=<original_filename_base>

# Example of action, the group name is named just what the action is named
# [ExampleAction]
# # The node ID where the browsing should start
# StartNode=content
# # Type of selection, possible values are:
# #   single - Allow for just one item to be selected
# #   multiple - Allow for multiple items to be selected
# ReturnType=NodeID
# # Overrides for start node, the value begins with StartNode
# # and a _ (underscore) and the override key name to match
# # The key value is placed inside the [] (brackets)

# Action used when uploading a new file as related object
[RelatedObjectUpload]
ReturnType=ObjectID
